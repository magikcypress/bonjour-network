const ImprovedDeviceScanner = require('../server/improved-device-scanner');

async function testImprovedFastScan() {
    console.log('üß™ Test du scan rapide am√©lior√©...\n');

    try {
        const scanner = new ImprovedDeviceScanner();

        console.log('üì° D√©marrage du scan rapide...');
        const startTime = Date.now();

        const devices = await scanner.scanConnectedDevices('fast');

        const endTime = Date.now();
        const duration = endTime - startTime;

        console.log(`\n‚úÖ Scan rapide termin√© en ${duration}ms`);
        console.log(`üìä R√©sultats:`);
        console.log(`   - Appareils d√©tect√©s: ${devices.length}`);

        if (devices.length > 0) {
            console.log('\nüì± Appareils d√©tect√©s:');
            devices.forEach((device, index) => {
                console.log(`   ${index + 1}. ${device.ip} (${device.mac || 'N/A'}) - ${device.hostname || 'Unknown'}`);
                if (device.sources) {
                    console.log(`      Sources: ${device.sources.join(', ')}`);
                }
            });
        } else {
            console.log('‚ùå Aucun appareil d√©tect√©');
        }

        // Comparaison avec l'ancien comportement
        console.log('\nüîç Analyse:');
        if (devices.length > 1) {
            console.log('‚úÖ Le scan rapide am√©lior√© d√©couvre plusieurs appareils');
        } else if (devices.length === 1) {
            console.log('‚ö†Ô∏è  Un seul appareil d√©tect√© (peut √™tre normal selon le r√©seau)');
        } else {
            console.log('‚ùå Aucun appareil d√©tect√© (v√©rifier la connectivit√© r√©seau)');
        }

    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error.message);
    }
}

// Ex√©cuter le test
testImprovedFastScan(); 