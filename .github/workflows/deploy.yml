name: Deploy Tests

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd client && npm ci
        cd ../server && npm ci
    
    - name: Build client
      run: |
        cd client
        npm run build
    
    - name: Test Docker build
      run: |
        docker build -t bonjour-network-test .
        docker run --rm -d --name test-container -p 5001:5001 bonjour-network-test
        sleep 10
        curl -f http://localhost:5001/api/health || exit 1
        docker stop test-container
    
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 15
        curl -f http://localhost:5001/api/health || exit 1
        curl -f http://localhost:3000 || exit 1
        docker-compose down
    
    - name: Test Raspberry Pi Docker
      run: |
        docker-compose -f docker-compose.raspberry-pi.yml up -d
        sleep 15
        curl -f http://localhost:5001/api/health || exit 1
        docker-compose -f docker-compose.raspberry-pi.yml down
    
    - name: Test production build
      run: |
        # Simuler un environnement de production
        export NODE_ENV=production
        cd server && npm start &
        sleep 10
        curl -f http://localhost:5001/api/health || exit 1
        pkill -f "npm start" 