name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies (root)
        run: npm install
      - name: Install dependencies (client)
        run: cd client && npm install
      - name: Install dependencies (server)
        run: cd server && npm install
      - name: Create server environment file
        run: |
          cd server
          cat > .env << EOF
          PORT=5001
          NODE_ENV=development
          JWT_SECRET=test_jwt_secret_for_ci_very_long_32_chars_minimum
          LOG_LEVEL=info
          WIFI_SCAN_INTERVAL=30000
          DEVICE_SCAN_INTERVAL=60000
          REQUEST_TIMEOUT=30000
          SCAN_TIMEOUT=10000
          CORS_ORIGIN=http://localhost:3000,http://localhost:3001,http://localhost:5001
          EOF
      - name: Create client environment file
        run: |
          cd client
          cat > .env << EOF
          REACT_APP_API_URL=http://localhost:5001
          GENERATE_SOURCEMAP=false
          EOF
      - name: Install wait-on globally
        run: npm install -g wait-on
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            curl \
            net-tools \
            bc
      - name: Start backend
        run: |
          cd server && nohup npm start > server.log 2>&1 &
          echo "Backend started with PID: $!"
          sleep 10
      - name: Start frontend
        run: |
          cd client && REACT_APP_API_URL=http://localhost:5001 nohup npm start > client.log 2>&1 &
          echo "Frontend started with PID: $!"
          sleep 15
      - name: Check if services are running
        run: |
          echo "Checking running processes:"
          ps aux | grep -E "(node|npm)" | grep -v grep || echo "No node processes found"
          echo "Checking ports:"
          netstat -tlnp 2>/dev/null | grep -E "(3000|5001)" || echo "No services on ports 3000/5001"
          echo "Backend log (last 20 lines):"
          tail -20 server/server.log || echo "No backend log found"
          echo "Frontend log (last 20 lines):"
          tail -20 client/client.log || echo "No frontend log found"
      - name: Wait for services to be ready
        run: |
          echo "Waiting for backend on port 5001..."
          timeout 60 bash -c 'until curl -s http://localhost:5001/api/devices > /dev/null; do sleep 2; done' || echo "Backend not responding"
          echo "Waiting for frontend on port 3000..."
          timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 2; done' || echo "Frontend not responding"
          echo "Services should be ready"
          sleep 5

      - name: Check available ports
        run: |
          echo "Checking if ports 3000 and 5001 are available:"
          lsof -i :3000 || echo "Port 3000 is free"
          lsof -i :5001 || echo "Port 5001 is free"
          echo "Available memory:"
          free -h || echo "Memory info not available"
      - name: Run accessibility tests (system)
        run: |
          echo "ðŸŽ¯ Tests d'accessibilitÃ© avec script systÃ¨me..."
          node scripts/test-accessibility-system.js 